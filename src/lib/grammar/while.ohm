
WHILE  {
	Exp = Cmd
	
	Cmd (commands / statements)
		= Cmd ";" Cmd							-- seq
		| "if" BExp "then" Cmd "else" Cmd "end"	-- if
		| "while" BExp "do" Cmd "end"			-- while
		| var ":=" AExp							-- assign
		| "skip"								-- skip
		
	BExp (a Boolean expression)
		= AExp "=" AExp		-- eq
		| AExp ">" AExp		-- gt
		| AExp "<" AExp		-- lt
		| AExp ">=" AExp	-- geq
		| AExp "<=" AExp	-- leq
		| "!" BExp			-- not
		| BExp "&&" BExp	-- and
		| BExp "||" BExp	-- or
		| bool				-- plain_bool
		
	AExp (an Arithmetic expression)
		=  AExp "+" AExp	-- add
		| AExp "-" AExp		-- sub
		| AExp "*" AExp		-- mul
		| var				-- variable_number
		| num				-- plain_number
		
	bool (a bool value)
		= "true"	-- true
		| "false"	-- false
		
	num (positive and negative integers)
		= "-" digit+	--negative
		| digit+		--positive
	
	var (a variable)
		= letter+
}